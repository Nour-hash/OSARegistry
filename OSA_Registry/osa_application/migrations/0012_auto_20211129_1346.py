# Generated by Django 3.2.6 on 2021-11-29 12:46

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('osa_application', '0011_alter_p_patient_table'),
    ]

    operations = [
        migrations.CreateModel(
            name='ASV',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eingabeID', models.IntegerField()),
                ('PatientID', models.IntegerField()),
                ('minEPAP', models.IntegerField()),
                ('maxEPAP', models.IntegerField()),
                ('minPS', models.IntegerField()),
                ('maxPS', models.IntegerField()),
                ('verordnetam', models.IntegerField()),
            ],
            options={
                'db_table': 'ASV',
            },
        ),
        migrations.CreateModel(
            name='autoBitLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eingabeID', models.IntegerField()),
                ('PatientID', models.IntegerField()),
                ('minEPAP', models.IntegerField()),
                ('maxEPAP', models.IntegerField()),
                ('minPS', models.IntegerField()),
                ('maxPS', models.IntegerField()),
            ],
            options={
                'db_table': 'autoBitLevel',
            },
        ),
        migrations.CreateModel(
            name='AVAPS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EingabeID', models.IntegerField()),
                ('PatientID', models.IntegerField()),
                ('minEPAP', models.IntegerField()),
                ('maxEPAP', models.IntegerField()),
                ('minPS', models.IntegerField()),
                ('maxPS', models.IntegerField()),
                ('Zielvolumen', models.IntegerField()),
            ],
            options={
                'db_table': 'AVAPS',
            },
        ),
        migrations.CreateModel(
            name='CPAP_Einstellung',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PatientID', models.IntegerField()),
                ('Datum_cpap', models.IntegerField()),
                ('BeatmungsModi', models.IntegerField()),
                ('IPAP', models.IntegerField()),
                ('EPAP', models.IntegerField()),
                ('Erweitert', models.IntegerField()),
            ],
            options={
                'db_table': 'CPAP_Einstellung',
            },
        ),
        migrations.CreateModel(
            name='CPAP_Kontrolle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PatientID', models.IntegerField()),
                ('Datum_1cpap', models.IntegerField()),
                ('Compliance_1cpap', models.IntegerField()),
                ('durchschnittlicheVerwendungsdauer', models.IntegerField()),
                ('berücksichtigteTage_1CPAP', models.IntegerField()),
                ('restAHibei_1CPAP', models.IntegerField()),
                ('nachjustierungNotwendig', models.IntegerField()),
                ('ModuswechselNotwendig', models.IntegerField()),
            ],
            options={
                'db_table': 'CPAP_Kontrolle',
            },
        ),
        migrations.CreateModel(
            name='DiagnosePSG',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Datum_Diagnose_PSG', models.IntegerField()),
                ('BMI_bei_Diagnose_PSG', models.IntegerField()),
                ('SaO2min_PSG', models.IntegerField()),
                ('Dominanz', models.IntegerField()),
                ('Lageabhängig', models.IntegerField()),
                ('AHI_Gesamt', models.IntegerField()),
                ('REM_assoziert', models.IntegerField()),
                ('O2unter90Prozent', models.IntegerField()),
                ('Diagnose', models.IntegerField()),
                ('primäre_Therapieempfehlung', models.IntegerField()),
                ('alternative_Therapieempfehlung', models.IntegerField()),
                ('Zustimmung_für_Beatmung', models.IntegerField()),
            ],
            options={
                'db_table': 'DiagnosePSG',
            },
        ),
        migrations.CreateModel(
            name='Gerät',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PatientID', models.IntegerField()),
                ('Gerätename', models.CharField(max_length=255)),
                ('Hersteller', models.CharField(max_length=255)),
                ('vertreibendeFirma', models.CharField(max_length=255)),
                ('Modi', models.CharField(max_length=255)),
                ('WLB', models.IntegerField()),
                ('Rampe', models.IntegerField()),
                ('O2Anschluss', models.IntegerField()),
                ('Heizschlauch', models.IntegerField()),
                ('Freitext', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'Gerät',
            },
        ),
        migrations.CreateModel(
            name='Masken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PatientID', models.IntegerField()),
                ('Maskentyp', models.IntegerField()),
                ('Maskenname', models.IntegerField()),
                ('Hersteller', models.IntegerField()),
                ('Größe', models.IntegerField()),
            ],
            options={
                'db_table': 'Masken',
            },
        ),
        migrations.CreateModel(
            name='Schlafbetreudender_Arzt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sba_Vorhanden', models.BooleanField()),
                ('sba_Name', models.CharField(max_length=55)),
                ('sba_Fachrichtung', models.CharField(max_length=55)),
                ('sba_plz', models.IntegerField()),
                ('sba_Ort', models.CharField(max_length=55)),
                ('sba_Strasse', models.CharField(max_length=55)),
                ('Hausnummer', models.IntegerField()),
                ('Telefonnummer', models.IntegerField()),
                ('Email', models.IntegerField()),
                ('ArztID', models.IntegerField()),
            ],
            options={
                'db_table': 'Schlafbetreudender_Arzt',
            },
        ),
        migrations.CreateModel(
            name='Spontanous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eingabeID', models.IntegerField()),
                ('PatientID', models.IntegerField()),
                ('verordnetam', models.IntegerField()),
                ('IPAP', models.IntegerField()),
                ('EPAP', models.IntegerField()),
                ('DeltaP', models.IntegerField()),
            ],
            options={
                'db_table': 'Spontanous',
            },
        ),
        migrations.CreateModel(
            name='Spontanous_Timed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eingabeID', models.IntegerField()),
                ('PatientID', models.IntegerField()),
                ('Modus', models.IntegerField()),
                ('IPAP', models.IntegerField()),
                ('EPAP', models.IntegerField()),
                ('Zeitgestinsp', models.IntegerField()),
                ('AF', models.IntegerField()),
            ],
            options={
                'db_table': 'Spontanous_Timed',
            },
        ),
        migrations.CreateModel(
            name='Therapieabbruch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('EingabeID', models.IntegerField()),
                ('PatientID', models.IntegerField()),
                ('Datum_Therapieabbruch', models.IntegerField()),
                ('InfobezogenerTherapieabbruch', models.IntegerField()),
            ],
            options={
                'db_table': 'Therapieabbruch',
            },
        ),
        migrations.CreateModel(
            name='Vorscreening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('PGdurchgeführtvon', models.IntegerField()),
                ('DatumderPG', models.IntegerField()),
                ('sao2minPG', models.IntegerField()),
                ('RDI', models.IntegerField()),
                ('EingabeID', models.IntegerField()),
            ],
            options={
                'db_table': 'Vorscreening',
            },
        ),
        migrations.RenameModel(
            old_name='f_Firma',
            new_name='Firma',
        ),
        migrations.RenameModel(
            old_name='p_Patient',
            new_name='Patient',
        ),
        migrations.DeleteModel(
            name='g_Gerät',
        ),
        migrations.DeleteModel(
            name='sa_SchlafbetreuenderArzt',
        ),
        migrations.DeleteModel(
            name='sba_Schlafbetreudender_Arzt',
        ),
        migrations.RenameField(
            model_name='firma',
            old_name='Firma',
            new_name='Firmenname',
        ),
        migrations.AlterModelTable(
            name='com_compliance',
            table='Compliance',
        ),
        migrations.AlterModelTable(
            name='firma',
            table='Firmen',
        ),
        migrations.AlterModelTable(
            name='patient',
            table='Patient',
        ),
    ]
